# Задание-1:
# Напишите функцию, возвращающую ряд Фибоначчи с n-элемента до m-элемента.
# Первыми элементами ряда считать цифры 1 1

def fibonacci(n, m):
# если m<n, то выдаем ошибку
    if m<n:
        return 'Неправильно задано последнее значение первого элемента не может  больше значения второго'
    else:
# если есть отрицательные значения, выводим ошибку
        if n<0 or m<0:
            return 'Этот алгоритм не может рассчитать последовательность Фибоначчи при отрицательных значениях элементов'
        else:
            f_list=[]
            f1=f2=1
            i = 2
            while len(f_list) < m:
                    f_sum = f2 + f1
                    f1 = f2
                    f2 = f_sum
                    i += 1
                    f_list.append(f_sum)
            return f_list[n:m];


# Задача-2:
# Напишите функцию, сортирующую принимаемый список по возрастанию.
# Для сортировки используйте любой алгоритм (например пузырьковый).
# Для решения данной задачи нельзя использовать встроенную функцию и метод sort()


def sort_to_max(*origin_list):
    '''
1. Переводим значения в лист
2. Определяем кол-во значений
3. Методом перебора сравниваем все числа между собой, в последствии меняя их местами
    '''
    def_list = list(origin_list[0])
    m = len(def_list)
    for i in range(m-1):
        for k in range(m-i-1):
            if def_list[k] > def_list[k+1]:
               def_list[k], def_list[k+1]  = def_list[k+1], def_list[k]
    return def_list

sort_to_max([2, 10, -12, 2.5, 20, -11, 4, 4, 0])

# Задача-3:
# Напишите собственную реализацию стандартной функции filter.
# Разумеется, внутри нельзя использовать саму функцию filter.

def filt(func, values):
    return(k for k in values if func(k))

print(list(filt(lambda x: True if x == 'мак' else False,
                  ['мак', 'просо', 'мак', 'мак', 'просо', 'мак', 'просо', 'просо', 'просо', 'мак'])))

# Задача-4:
# Даны четыре точки А1(х1, у1), А2(x2 ,у2), А3(x3 , у3), А4(х4, у4).
# Определить, будут ли они вершинами параллелограмма.

a1 = []
a1.append(int(input('Введите значение для x, координаты A1 ')))
a1.append(int(input('Введите значение для y, координаты A1 ')))

a2 = []
a2.append(int(input('Введите значение для x, координаты A2 ')))
a2.append(int(input('Введите значение для y, координаты A2 ')))

a3 = []
a3.append(int(input('Введите значение для x, координаты A3 ')))
a3.append(int(input('Введите значение для y, координаты A3 ')))

a4 = []
a4.append(int(input('Введите значение для x, координаты A4 ')))
a4.append(int(input('Введите значение для y, координаты A4 ')))

def palalelogramm(a1,a2,a3,a4):
    '''
# проверка, что все x не с сходятся в одной точкее
# проверка, что у вершин А1-А3 и А2-А4 точка пересечения равна половине длинны диагонали между точками   
    '''
    if a1[0] != a2[0] != a3[0] != a4[0] and (a1[0]+a3[0])/2 == (a2[0]+a4[0])/2:
        return 'Это точно параллелограмм'
    else:
        return 'Это точно не параллелограмм'
    
palalelogramm(a1,a2,a3,a4)
